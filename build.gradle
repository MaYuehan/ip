plugins {
    id 'java'
    id 'application'
    //id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.openjfx.javafxplugin' version '0.0.13'

}

repositories {
    mavenCentral()
}

/*dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
}*/

/*dependencies {
    String javaFxVersion = '17.0.7'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'


    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}*/

dependencies {
    //@@author woojiahao-reused
    //Reused from https://github.com/woojiahao/ip/blob/master/build.gradle
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    def platforms = ["win", "linux", "mac"]
    def javafxDependency = ["javafx-graphics", "javafx-controls", "javafx-fxml"]

    for (plt in platforms) {
        for (dep in javafxDependency) {
            runtimeOnly "org.openjfx:$dep:$javafx.version:$plt"
        }
    }
    //@author woojiahao
}

application {
    mainClass.set("yue.Launcher")
    mainClassName = 'yue.Launcher'
}
/*
shadowJar {
    archiveBaseName = "yue"
    archiveFileName = 'yue.jar'
    archiveClassifier = null
    dependsOn("distZip", "distTar")

}*/
shadowJar {
    archiveBaseName = "yue"
    //archiveFileName = 'yue.jar'
    archiveClassifier = null
    dependsOn("distZip", "distTar")
}

jar {
    manifest {
        attributes(
                'Main-Class': 'yue.Launcher'
        )
    }
}

run{
    standardInput = System.in
    //enableAssertions = true
}

javafx {
    version = '17.0.7'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}


